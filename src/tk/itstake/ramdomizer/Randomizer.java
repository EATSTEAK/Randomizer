/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tk.itstake.ramdomizer;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 *
 * @author itstake
 */
public class Randomizer extends javax.swing.JFrame {

    /**
     * Creates new form Randomizer
     */
    Toolkit tk = Toolkit.getDefaultToolkit();
    Dimension screenSize = tk.getScreenSize();
    Dimension panelSize = this.getSize();
    public static Font font;
    private final ImageIcon wicon = new ImageIcon(getClass().getResource("/img/logoback.png"));
    public Randomizer() {
        try {
            this.font = Font.createFont(Font.TRUETYPE_FONT, this.getClass().getResourceAsStream("/fonts/NanumBarunGothic.ttf")).deriveFont(Font.PLAIN, 0);
        } catch (FontFormatException ex) {
            Logger.getLogger(Randomizer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Randomizer.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        teamInt = new javax.swing.JTextField();
        randomTargetInt = new javax.swing.JTextField();
        exceptInt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        targetInt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("자동뽑기 시스템");
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(wicon.getImage());
        setMinimumSize(new java.awt.Dimension(800, 416));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel1.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("팀의 수:");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 90, 90, 15);

        jLabel2.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("인원의 수:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 120, 90, 15);

        teamInt.setFont(font.deriveFont(Font.PLAIN, 12));
        teamInt.setText("0");
        teamInt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        teamInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamIntActionPerformed(evt);
            }
        });
        jPanel1.add(teamInt);
        teamInt.setBounds(100, 90, 70, 20);

        randomTargetInt.setFont(font.deriveFont(Font.PLAIN, 12));
        randomTargetInt.setText("0");
        randomTargetInt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(randomTargetInt);
        randomTargetInt.setBounds(100, 120, 70, 20);

        exceptInt.setFont(font.deriveFont(Font.PLAIN, 12));
        exceptInt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        exceptInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exceptIntActionPerformed(evt);
            }
        });
        jPanel1.add(exceptInt);
        exceptInt.setBounds(100, 150, 290, 20);

        jLabel3.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("제외할 번호:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 150, 90, 15);

        jLabel4.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel4.setText(", 로 구분하며, ~ 으로 범위를 지정합니다.");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(100, 180, 260, 15);

        jLabel5.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel5.setText("예) 1~10 -> 1부터 10은 제외, 1,8 -> 1과 8은 제외");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(100, 200, 290, 15);

        jLabel6.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel6.setText("1,5~7 1과 5부터 7은 제외");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(100, 220, 150, 15);

        jLabel7.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("뽑을 사람의 수:");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(0, 60, 90, 15);

        targetInt.setFont(font.deriveFont(Font.PLAIN, 12));
        targetInt.setText("0");
        targetInt.setToolTipText("");
        targetInt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        targetInt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetIntActionPerformed(evt);
            }
        });
        jPanel1.add(targetInt);
        targetInt.setBounds(100, 60, 70, 20);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(font.deriveFont(Font.PLAIN, 12));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("결과가 나오는 창입니다.");
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 290, 780, 120);

        jLabel8.setFont(font.deriveFont(Font.PLAIN, 24));
        jLabel8.setText("결과");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(10, 260, 50, 30);

        jButton1.setBackground(new java.awt.Color(63, 81, 181));
        jButton1.setFont(font.deriveFont(Font.PLAIN, 36));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("뽑기!");
        jButton1.setBorder(null);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(460, 60, 330, 220);

        jPanel2.setBackground(new java.awt.Color(63, 81, 181));
        jPanel2.setLayout(new java.awt.GridLayout());

        jLabel9.setFont(font.deriveFont(Font.PLAIN, 24));
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("자동뽑기 시스템");
        jPanel2.add(jLabel9);

        jPanel3.setBackground(new java.awt.Color(63, 81, 181));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jLabel10.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("by ITSTAKE, itstake.tk ");
        jPanel3.add(jLabel10, java.awt.BorderLayout.PAGE_END);

        jPanel2.add(jPanel3);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 800, 50);

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(font.deriveFont(Font.PLAIN, 12));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("팀의 인원수를 비슷하게");
        jCheckBox1.setFocusPainted(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(180, 90, 210, 23);

        jLabel11.setFont(font.deriveFont(Font.PLAIN, 12));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("결과 창 글씨 크기:");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(60, 260, 100, 15);

        jTextField1.setFont(font.deriveFont(Font.PLAIN, 12));
        jTextField1.setText("12");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(170, 260, 67, 21);

        jButton2.setBackground(new java.awt.Color(63, 81, 181));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("적용");
        jButton2.setBorder(null);
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(250, 260, 70, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void teamIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamIntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teamIntActionPerformed

    private void exceptIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exceptIntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exceptIntActionPerformed

    private void targetIntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetIntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_targetIntActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(isInteger(targetInt.getText()) && isInteger(randomTargetInt.getText()) && isInteger(teamInt.getText()) && isExceptInts(exceptInt.getText())) {
            jTextArea1.setForeground(Color.BLACK);
            jTextArea1.setText(getRandomTeams(Integer.parseInt(randomTargetInt.getText()), Integer.parseInt(teamInt.getText()), Integer.parseInt(targetInt.getText()), getExceptInts(exceptInt.getText()),jCheckBox1.isSelected()));
            jTextArea1.repaint();
        } else {
            jTextArea1.setForeground(Color.RED);
            jTextArea1.setText("에러가 발생하였습니다! 값을 정확히 입력하였는지 확인하여 보세요.");
            jTextArea1.repaint();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextArea1.setFont(font.deriveFont(Font.PLAIN, Integer.parseInt(jTextField1.getText())));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        resizewindow();
    }//GEN-LAST:event_formComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Randomizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Randomizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Randomizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Randomizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Randomizer().setVisible(true);
            }
        });
    }
    
    public static boolean isInteger(String s) {
        try { 
            Integer.parseInt(s); 
        } catch(NumberFormatException e) { 
            return false; 
        } catch(NullPointerException e) {
            return false;
        }
        // only got here if we didn't return false
        return true;
    }
    
    public boolean isExceptInts(String parse) {
        if(!parse.equals("")) {
            String[] integers = parse.split(",");
            for(String integer : integers) {
                if(!isInteger(integer)) {
                    String[] integers2 = integer.split("~");
                    if(integers2.length != 2 || !isInteger(integers2[0]) || !isInteger(integers2[1])) {
                        return false;
                    }
                }
            }
        }
        return true;
    }
    
    public ArrayList<Integer> getExceptInts(String parse) {
        ArrayList<Integer> except = new ArrayList<Integer>();
        if(!parse.equals("")) {
            String[] integers = parse.split(",");
            for(String integer : integers) {
                if(isInteger(integer)) {
                    except.add(Integer.parseInt(integer));
                } else {
                    String[] integers2 = integer.split("~");
                    if(integers2.length == 2 && isInteger(integers2[0]) && isInteger(integers2[1])) {
                        Integer start = Integer.parseInt(integers2[0]);
                        Integer end = Integer.parseInt(integers2[1]);
                        for(int i = start; i <= end; i++) {
                            except.add(i);
                        }
                    }
                }
            }
        }
        return except;
    }
    
    
    public Integer rand(int min, int max) {
        Random rand = new Random();
        return rand.nextInt(max-min)+min;
    }
    
    public String getRandomTeams(int target, int teams, int randomTarget, ArrayList<Integer> excepts, boolean isBalanced) {
        HashMap<Integer, ArrayList<Integer>> teamhash = new HashMap<>();
        HashMap<Integer, Integer> teamintegers = new HashMap<>();
        ArrayList<Integer> randlist = new ArrayList<>();
        for(int i = 1; i <= randomTarget; i++) {
            randlist.add(i);
        }
        Collections.shuffle(randlist);
        for(int i : randlist) {
            if(!excepts.contains(i)) {
                int random;
                if(isBalanced) {
                    random = rand(1, teams);
                } else {
                    random = rand(1, teams);
                }
                System.out.println("HashMap:" + teamhash);
                if(teamhash.containsKey(random)) {
                    ArrayList<Integer> intlist = teamhash.get(random);
                    intlist.add(i);
                    teamintegers.put(random, teamintegers.get(random)+1);
                    teamhash.put(random, intlist);
                    System.out.println("Putted - Index:" + random + " List:" + intlist);
                } else {
                    ArrayList<Integer> intlist = new ArrayList<Integer>();
                    intlist.add(i);
                    teamintegers.put(random, 1);
                    teamhash.put(random, intlist);
                    System.out.println("Putted - Index:" + random + " List:[" + i + "]");
                }
            }
        }
        String build = "";
        int backrandomtarget = randomTarget;
        for(int i = 1; i <= teams; i++) {
            if(teamhash.containsKey(i) && backrandomtarget > 0) {
                if(backrandomtarget == randomTarget) {
                    build = build + i + " - ";
                } else {
                    build = build + "| " + i + " - ";
                }
                ArrayList<Integer> ints = teamhash.get(i);
                for(int i2 = 0; i2 < ints.size(); i2++) {
                    if(i2 == 0) {
                        build = build + "" + ints.get(i2);
                    } else {
                        build = build + "," + ints.get(i2);
                    }
                }
                backrandomtarget--;
            }
        }
        System.out.println("Target Count: " + target);
        System.out.println("Builded String: " + build);
        return build;
    }
    
    
    public void resizewindow() {
        System.out.println(this.getSize());
        Dimension size = this.getSize();
        size.setSize(size.width-15, size.height-40);
        jPanel1.setSize(size);
        jPanel2.setSize(size.width, jPanel2.getSize().height);
        jScrollPane1.setSize(size.width-20, size.height-300);
        jTextArea1.setSize(size.width-20, size.height-300);
        repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField exceptInt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField randomTargetInt;
    private javax.swing.JTextField targetInt;
    private javax.swing.JTextField teamInt;
    // End of variables declaration//GEN-END:variables
}
